--- 
jobs: 
  build: 
    docker: 
      - 
        image: "circleci/python:latest"
    steps: 
      - checkout
      - 
        restore_cahce: 
          key: "deps-{{ checksum \"requirements/dev.txt\"}}-{{ .Environment.CACHE_VERSION}}"
      - 
        run: 
          command: "python3 -m venv venv . venv/bin/active pip install -r requirements/dev.txt"
          name: "Installation des d√©pendances python"
      - 
        save_cache: 
          key: "deps-{{ checksum \"requirements/dev.txt\"}}-{{ .Environment.CACHE_VERSION }}"
          paths: 
            - venv
  flask_tests: 
    docker: 
      - 
        environment: 
          CONDUIT_SECRET: something-really-secret
          DATABASE_URL: "postgresql://denis:denis@localhost:5432/postgres?sslmode=disable"
          FLASK_APP: autoapp.py
          FLASK_DEBUG: 1
        image: "circleci/python:latest"
      - 
        environment: 
          POSTGRES_BD: postgres
          POSTGRES_PASSWORD: denis
          POSTGRES_USER: denis
        image: "circleci/postgres:9.6.9-alpine-ram"
    steps: 
      - checkout
      - 
        restore_cache: 
          key: "deps-{{ checksum \"requirements/dev.txt\"}}-{{ .Environment.CACHE_VERSION }}"
      - 
        run: 
          command: "dockerize -wait tcp://localhost:5432 -timeout 1m"
          name: "Attente de postgres"
      - 
        run: 
          command: |
              . venv/bin/activate
              flask db stamp head
              flask db migrate
              flask db upgrade
              flask test
          name: "Tests Flask"
workflows: 
  test: 
    jobs: 
      - build
      - 
        flask_tests: 
          requires: 
            - build
  version: 2
